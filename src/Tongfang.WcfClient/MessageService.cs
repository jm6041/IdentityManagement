//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tongfang.WcfClient.Simulator
{

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://www.tongfangcloud.com/", ConfigurationName = "ISmsService")]
    public interface ISmsService
    {

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://www.tongfangcloud.com/ISmsService/SendSms")]
        void SendSms(string number, string message);

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://www.tongfangcloud.com/ISmsService/SendSms")]
        System.Threading.Tasks.Task SendSmsAsync(string number, string message);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISmsServiceChannel : ISmsService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmsServiceClient : System.ServiceModel.ClientBase<ISmsService>, ISmsService
    {

        public SmsServiceClient()
        {
        }

        public SmsServiceClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public SmsServiceClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public SmsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public SmsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public void SendSms(string number, string message)
        {
            base.Channel.SendSms(number, message);
        }

        public System.Threading.Tasks.Task SendSmsAsync(string number, string message)
        {
            return base.Channel.SendSmsAsync(number, message);
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://www.tongfangcloud.com/", ConfigurationName = "IEmailService")]
    public interface IEmailService
    {

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://www.tongfangcloud.com/IEmailService/SendEmail")]
        void SendEmail(string email, string subject, string message);

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://www.tongfangcloud.com/IEmailService/SendEmail")]
        System.Threading.Tasks.Task SendEmailAsync(string email, string subject, string message);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailServiceChannel : IEmailService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailServiceClient : System.ServiceModel.ClientBase<IEmailService>, IEmailService
    {

        public EmailServiceClient()
        {
        }

        public EmailServiceClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public EmailServiceClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public EmailServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public EmailServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public void SendEmail(string email, string subject, string message)
        {
            base.Channel.SendEmail(email, subject, message);
        }

        public System.Threading.Tasks.Task SendEmailAsync(string email, string subject, string message)
        {
            return base.Channel.SendEmailAsync(email, subject, message);
        }
    }
}